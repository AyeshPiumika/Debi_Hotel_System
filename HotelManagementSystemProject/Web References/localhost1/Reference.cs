//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HotelManagementSystemProject.localhost1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceForIndividualRoomSoap", Namespace="http://tempuri.org/")]
    public partial class WebServiceForIndividualRoom : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback insertRoomsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateRoomsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteRoomsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchRoomsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchAllRoomsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebServiceForIndividualRoom() {
            this.Url = global::HotelManagementSystemProject.Properties.Settings.Default.HotelManagementSystemProject_localhost1_WebServiceForIndividualRoom;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event insertRoomsCompletedEventHandler insertRoomsCompleted;
        
        /// <remarks/>
        public event updateRoomsCompletedEventHandler updateRoomsCompleted;
        
        /// <remarks/>
        public event deleteRoomsCompletedEventHandler deleteRoomsCompleted;
        
        /// <remarks/>
        public event searchRoomsCompletedEventHandler searchRoomsCompleted;
        
        /// <remarks/>
        public event SearchAllRoomsCompletedEventHandler SearchAllRoomsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertRooms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int insertRooms(string HotelName, int RID, string RType, string RCountry, string RCity, string RDetails, string RContact, string RPrice, string RAvailble) {
            object[] results = this.Invoke("insertRooms", new object[] {
                        HotelName,
                        RID,
                        RType,
                        RCountry,
                        RCity,
                        RDetails,
                        RContact,
                        RPrice,
                        RAvailble});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void insertRoomsAsync(string HotelName, int RID, string RType, string RCountry, string RCity, string RDetails, string RContact, string RPrice, string RAvailble) {
            this.insertRoomsAsync(HotelName, RID, RType, RCountry, RCity, RDetails, RContact, RPrice, RAvailble, null);
        }
        
        /// <remarks/>
        public void insertRoomsAsync(string HotelName, int RID, string RType, string RCountry, string RCity, string RDetails, string RContact, string RPrice, string RAvailble, object userState) {
            if ((this.insertRoomsOperationCompleted == null)) {
                this.insertRoomsOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertRoomsOperationCompleted);
            }
            this.InvokeAsync("insertRooms", new object[] {
                        HotelName,
                        RID,
                        RType,
                        RCountry,
                        RCity,
                        RDetails,
                        RContact,
                        RPrice,
                        RAvailble}, this.insertRoomsOperationCompleted, userState);
        }
        
        private void OninsertRoomsOperationCompleted(object arg) {
            if ((this.insertRoomsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertRoomsCompleted(this, new insertRoomsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateRooms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateRooms(string HotelName, int RID, string RType, string RCountry, string RCity, string RDetails, string RContact, string RPrice, string RAvailble) {
            object[] results = this.Invoke("updateRooms", new object[] {
                        HotelName,
                        RID,
                        RType,
                        RCountry,
                        RCity,
                        RDetails,
                        RContact,
                        RPrice,
                        RAvailble});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateRoomsAsync(string HotelName, int RID, string RType, string RCountry, string RCity, string RDetails, string RContact, string RPrice, string RAvailble) {
            this.updateRoomsAsync(HotelName, RID, RType, RCountry, RCity, RDetails, RContact, RPrice, RAvailble, null);
        }
        
        /// <remarks/>
        public void updateRoomsAsync(string HotelName, int RID, string RType, string RCountry, string RCity, string RDetails, string RContact, string RPrice, string RAvailble, object userState) {
            if ((this.updateRoomsOperationCompleted == null)) {
                this.updateRoomsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateRoomsOperationCompleted);
            }
            this.InvokeAsync("updateRooms", new object[] {
                        HotelName,
                        RID,
                        RType,
                        RCountry,
                        RCity,
                        RDetails,
                        RContact,
                        RPrice,
                        RAvailble}, this.updateRoomsOperationCompleted, userState);
        }
        
        private void OnupdateRoomsOperationCompleted(object arg) {
            if ((this.updateRoomsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateRoomsCompleted(this, new updateRoomsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteRooms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int deleteRooms(int RID) {
            object[] results = this.Invoke("deleteRooms", new object[] {
                        RID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRoomsAsync(int RID) {
            this.deleteRoomsAsync(RID, null);
        }
        
        /// <remarks/>
        public void deleteRoomsAsync(int RID, object userState) {
            if ((this.deleteRoomsOperationCompleted == null)) {
                this.deleteRoomsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRoomsOperationCompleted);
            }
            this.InvokeAsync("deleteRooms", new object[] {
                        RID}, this.deleteRoomsOperationCompleted, userState);
        }
        
        private void OndeleteRoomsOperationCompleted(object arg) {
            if ((this.deleteRoomsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRoomsCompleted(this, new deleteRoomsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/searchRooms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet searchRooms(int RID) {
            object[] results = this.Invoke("searchRooms", new object[] {
                        RID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void searchRoomsAsync(int RID) {
            this.searchRoomsAsync(RID, null);
        }
        
        /// <remarks/>
        public void searchRoomsAsync(int RID, object userState) {
            if ((this.searchRoomsOperationCompleted == null)) {
                this.searchRoomsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchRoomsOperationCompleted);
            }
            this.InvokeAsync("searchRooms", new object[] {
                        RID}, this.searchRoomsOperationCompleted, userState);
        }
        
        private void OnsearchRoomsOperationCompleted(object arg) {
            if ((this.searchRoomsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchRoomsCompleted(this, new searchRoomsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchAllRooms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchAllRooms() {
            object[] results = this.Invoke("SearchAllRooms", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAllRoomsAsync() {
            this.SearchAllRoomsAsync(null);
        }
        
        /// <remarks/>
        public void SearchAllRoomsAsync(object userState) {
            if ((this.SearchAllRoomsOperationCompleted == null)) {
                this.SearchAllRoomsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAllRoomsOperationCompleted);
            }
            this.InvokeAsync("SearchAllRooms", new object[0], this.SearchAllRoomsOperationCompleted, userState);
        }
        
        private void OnSearchAllRoomsOperationCompleted(object arg) {
            if ((this.SearchAllRoomsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAllRoomsCompleted(this, new SearchAllRoomsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void insertRoomsCompletedEventHandler(object sender, insertRoomsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertRoomsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertRoomsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updateRoomsCompletedEventHandler(object sender, updateRoomsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateRoomsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateRoomsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteRoomsCompletedEventHandler(object sender, deleteRoomsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRoomsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRoomsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void searchRoomsCompletedEventHandler(object sender, searchRoomsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchRoomsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchRoomsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SearchAllRoomsCompletedEventHandler(object sender, SearchAllRoomsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAllRoomsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchAllRoomsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591